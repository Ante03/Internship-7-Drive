// <auto-generated />
using System;
using Internship_7_Drive.Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Internship_7_Drive.Data.Migrations
{
    [DbContext(typeof(DriveDbContext))]
    [Migration("20241230124012_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Internship_7_Drive.Data.Entities.Models.Comments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FileId")
                        .HasColumnType("integer");

                    b.Property<string>("OwnerMail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.HasIndex("OwnerMail");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Comment1",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 12, 30, 13, 40, 11, 718, DateTimeKind.Unspecified).AddTicks(7751), new TimeSpan(0, 1, 0, 0, 0)),
                            FileId = 1,
                            OwnerMail = "ante@gmail.com"
                        },
                        new
                        {
                            Id = 2,
                            Content = "Comment2",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 12, 30, 13, 40, 11, 718, DateTimeKind.Unspecified).AddTicks(7760), new TimeSpan(0, 1, 0, 0, 0)),
                            FileId = 2,
                            OwnerMail = "marko@gmail.com"
                        },
                        new
                        {
                            Id = 3,
                            Content = "Comment3",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 12, 30, 13, 40, 11, 718, DateTimeKind.Unspecified).AddTicks(7765), new TimeSpan(0, 1, 0, 0, 0)),
                            FileId = 3,
                            OwnerMail = "mate@gmail.com"
                        },
                        new
                        {
                            Id = 4,
                            Content = "Comment4",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 12, 30, 13, 40, 11, 718, DateTimeKind.Unspecified).AddTicks(7768), new TimeSpan(0, 1, 0, 0, 0)),
                            FileId = 4,
                            OwnerMail = "marija@gmail.com"
                        },
                        new
                        {
                            Id = 5,
                            Content = "Comment5",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 12, 30, 13, 40, 11, 718, DateTimeKind.Unspecified).AddTicks(7772), new TimeSpan(0, 1, 0, 0, 0)),
                            FileId = 5,
                            OwnerMail = "marta@gmail.com"
                        });
                });

            modelBuilder.Entity("Internship_7_Drive.Data.Entities.Models.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FolderId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("LastChangedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OwnerMail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FolderId");

                    b.HasIndex("OwnerMail");

                    b.ToTable("Files");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Content1",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 12, 30, 13, 40, 11, 718, DateTimeKind.Unspecified).AddTicks(7670), new TimeSpan(0, 1, 0, 0, 0)),
                            FolderId = 1,
                            LastChangedAt = new DateTimeOffset(new DateTime(2024, 12, 30, 13, 40, 11, 718, DateTimeKind.Unspecified).AddTicks(7674), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "File1",
                            OwnerMail = "ante@gmail.com"
                        },
                        new
                        {
                            Id = 2,
                            Content = "Content2",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 12, 30, 13, 40, 11, 718, DateTimeKind.Unspecified).AddTicks(7682), new TimeSpan(0, 1, 0, 0, 0)),
                            FolderId = 2,
                            LastChangedAt = new DateTimeOffset(new DateTime(2024, 12, 30, 13, 40, 11, 718, DateTimeKind.Unspecified).AddTicks(7685), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "File2",
                            OwnerMail = "marko@gmail.com"
                        },
                        new
                        {
                            Id = 3,
                            Content = "Content3",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 12, 30, 13, 40, 11, 718, DateTimeKind.Unspecified).AddTicks(7689), new TimeSpan(0, 1, 0, 0, 0)),
                            FolderId = 3,
                            LastChangedAt = new DateTimeOffset(new DateTime(2024, 12, 30, 13, 40, 11, 718, DateTimeKind.Unspecified).AddTicks(7692), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "File3",
                            OwnerMail = "mate@gmail.com"
                        },
                        new
                        {
                            Id = 4,
                            Content = "Content4",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 12, 30, 13, 40, 11, 718, DateTimeKind.Unspecified).AddTicks(7696), new TimeSpan(0, 1, 0, 0, 0)),
                            FolderId = 4,
                            LastChangedAt = new DateTimeOffset(new DateTime(2024, 12, 30, 13, 40, 11, 718, DateTimeKind.Unspecified).AddTicks(7698), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "File4",
                            OwnerMail = "marija@gmail.com"
                        },
                        new
                        {
                            Id = 5,
                            Content = "Content5",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 12, 30, 13, 40, 11, 718, DateTimeKind.Unspecified).AddTicks(7703), new TimeSpan(0, 1, 0, 0, 0)),
                            FolderId = 5,
                            LastChangedAt = new DateTimeOffset(new DateTime(2024, 12, 30, 13, 40, 11, 718, DateTimeKind.Unspecified).AddTicks(7705), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "File5",
                            OwnerMail = "marta@gmail.com"
                        });
                });

            modelBuilder.Entity("Internship_7_Drive.Data.Entities.Models.FileShared", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FileId")
                        .HasColumnType("integer");

                    b.Property<string>("OwnerMail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SharedWithUserMail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.HasIndex("OwnerMail");

                    b.HasIndex("SharedWithUserMail");

                    b.ToTable("FileShareds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FileId = 1,
                            OwnerMail = "ante@gmail.com",
                            SharedWithUserMail = "marta@gmail.com"
                        },
                        new
                        {
                            Id = 2,
                            FileId = 2,
                            OwnerMail = "marko@gmail.com",
                            SharedWithUserMail = "ante@gmail.com"
                        },
                        new
                        {
                            Id = 3,
                            FileId = 3,
                            OwnerMail = "mate@gmail.com",
                            SharedWithUserMail = "marko@gmail.com"
                        },
                        new
                        {
                            Id = 4,
                            FileId = 4,
                            OwnerMail = "marija@gmail.com",
                            SharedWithUserMail = "mate@gmail.com"
                        },
                        new
                        {
                            Id = 5,
                            FileId = 5,
                            OwnerMail = "marta@gmail.com",
                            SharedWithUserMail = "marija@gmail.com"
                        });
                });

            modelBuilder.Entity("Internship_7_Drive.Data.Entities.Models.Folder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("LastChangedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OwnerMail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ParentFolderId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OwnerMail");

                    b.HasIndex("ParentFolderId");

                    b.ToTable("Folders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 12, 30, 13, 40, 11, 718, DateTimeKind.Unspecified).AddTicks(7501), new TimeSpan(0, 1, 0, 0, 0)),
                            LastChangedAt = new DateTimeOffset(new DateTime(2024, 12, 30, 13, 40, 11, 718, DateTimeKind.Unspecified).AddTicks(7582), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Folder1",
                            OwnerMail = "ante@gmail.com"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 12, 30, 13, 40, 11, 718, DateTimeKind.Unspecified).AddTicks(7591), new TimeSpan(0, 1, 0, 0, 0)),
                            LastChangedAt = new DateTimeOffset(new DateTime(2024, 12, 30, 13, 40, 11, 718, DateTimeKind.Unspecified).AddTicks(7595), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Folder2",
                            OwnerMail = "marko@gmail.com"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 12, 30, 13, 40, 11, 718, DateTimeKind.Unspecified).AddTicks(7599), new TimeSpan(0, 1, 0, 0, 0)),
                            LastChangedAt = new DateTimeOffset(new DateTime(2024, 12, 30, 13, 40, 11, 718, DateTimeKind.Unspecified).AddTicks(7602), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Folder3",
                            OwnerMail = "mate@gmail.com"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 12, 30, 13, 40, 11, 718, DateTimeKind.Unspecified).AddTicks(7606), new TimeSpan(0, 1, 0, 0, 0)),
                            LastChangedAt = new DateTimeOffset(new DateTime(2024, 12, 30, 13, 40, 11, 718, DateTimeKind.Unspecified).AddTicks(7608), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Folder4",
                            OwnerMail = "marija@gmail.com"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 12, 30, 13, 40, 11, 718, DateTimeKind.Unspecified).AddTicks(7612), new TimeSpan(0, 1, 0, 0, 0)),
                            LastChangedAt = new DateTimeOffset(new DateTime(2024, 12, 30, 13, 40, 11, 718, DateTimeKind.Unspecified).AddTicks(7615), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Folder5",
                            OwnerMail = "marta@gmail.com"
                        });
                });

            modelBuilder.Entity("Internship_7_Drive.Data.Entities.Models.User", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.HasKey("Email");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Email = "ante@gmail.com",
                            FirstName = "Ante",
                            LastName = "Antic",
                            Password = "password1"
                        },
                        new
                        {
                            Email = "marko@gmail.com",
                            FirstName = "Marko",
                            LastName = "Markic",
                            Password = "password2"
                        },
                        new
                        {
                            Email = "mate@gmail.com",
                            FirstName = "Mate",
                            LastName = "Matic",
                            Password = "password3"
                        },
                        new
                        {
                            Email = "marija@gmail.com",
                            FirstName = "Marija",
                            LastName = "Maric",
                            Password = "password4"
                        },
                        new
                        {
                            Email = "marta@gmail.com",
                            FirstName = "Marta",
                            LastName = "Martic",
                            Password = "password5"
                        });
                });

            modelBuilder.Entity("Internship_7_Drive.Data.Entities.Models.Comments", b =>
                {
                    b.HasOne("Internship_7_Drive.Data.Entities.Models.File", "File")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Internship_7_Drive.Data.Entities.Models.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerMail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Internship_7_Drive.Data.Entities.Models.File", b =>
                {
                    b.HasOne("Internship_7_Drive.Data.Entities.Models.Folder", "Folder")
                        .WithMany("Files")
                        .HasForeignKey("FolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Internship_7_Drive.Data.Entities.Models.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerMail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Folder");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Internship_7_Drive.Data.Entities.Models.FileShared", b =>
                {
                    b.HasOne("Internship_7_Drive.Data.Entities.Models.File", "File")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Internship_7_Drive.Data.Entities.Models.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerMail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Internship_7_Drive.Data.Entities.Models.User", "ShardWithUser")
                        .WithMany()
                        .HasForeignKey("SharedWithUserMail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");

                    b.Navigation("Owner");

                    b.Navigation("ShardWithUser");
                });

            modelBuilder.Entity("Internship_7_Drive.Data.Entities.Models.Folder", b =>
                {
                    b.HasOne("Internship_7_Drive.Data.Entities.Models.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerMail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Internship_7_Drive.Data.Entities.Models.Folder", "ParentFolder")
                        .WithMany("Subfolders")
                        .HasForeignKey("ParentFolderId");

                    b.Navigation("Owner");

                    b.Navigation("ParentFolder");
                });

            modelBuilder.Entity("Internship_7_Drive.Data.Entities.Models.Folder", b =>
                {
                    b.Navigation("Files");

                    b.Navigation("Subfolders");
                });
#pragma warning restore 612, 618
        }
    }
}
